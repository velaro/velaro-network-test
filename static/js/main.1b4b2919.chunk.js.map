{"version":3,"sources":["components/Panel.js","components/EngagementApiTest.js","components/MainApiTest.js","components/ReportingApiTest.js","components/VisitorApiTest.js","components/CdnTest.js","components/EngagementHubTest.js","components/UserAgentTest.js","components/CookieTest.js","components/BandwidthTest.js","App.js","registerServiceWorker.js","index.js"],"names":["Panel","_ref","title","description","status","react_default","a","createElement","className","concat","EngagementApiTest","state","_this2","this","start","Date","now","fetch","props","endpoint","then","end","setState","catch","components_Panel","Component","MainApiTest","ReportingApiTest","VisitorApiTest","CdnTest","EngagementHubTest","connection","hubConnection","proxy","createHubProxy","invoke","result","Error","_context","t0","toString","UserAgentTest","navigator","userAgent","CookieTest","cookieEnabled","response","blob","mbps","size","toFixed","Home","Link","to","Production","components_UserAgentTest","components_CookieTest","components_EngagementApiTest","components_MainApiTest","components_ReportingApiTest","components_VisitorApiTest","components_CdnTest","components_EngagementHubTest","BandwidthTest","EnterpriseStaging","CoreStaging","App","HashRouter","Route","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.1b4b2919.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Panel = ({ title, description, status }) => {\r\n  return (\r\n    <div className={`panel ${status}`}>\r\n      <span className=\"title\">{title}</span>\r\n      <span className=\"description\">{description}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Panel;\r\n","import React, { Component } from 'react';\r\nimport Panel from './Panel';\r\n\r\nclass EngagementApiTest extends Component {\r\n  state = {\r\n    description: '',\r\n    status: 'loading'\r\n  };\r\n\r\n  componentDidMount() {\r\n    const start = Date.now();\r\n\r\n    fetch(this.props.endpoint)\r\n      .then(() => {\r\n        const end = Date.now();\r\n        this.setState({\r\n          description: `success (${end - start} ms)`,\r\n          status: 'success'\r\n        });\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          description: 'failure',\r\n          status: 'failure'\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Panel\r\n        title=\"Engagement API\"\r\n        description={this.state.description}\r\n        status={this.state.status}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default EngagementApiTest;\r\n","import React, { Component } from 'react';\r\nimport Panel from './Panel';\r\n\r\nclass MainApiTest extends Component {\r\n  state = {\r\n    description: '',\r\n    status: 'loading'\r\n  };\r\n\r\n  componentDidMount() {\r\n    const start = Date.now();\r\n\r\n    fetch(this.props.endpoint)\r\n      .then(() => {\r\n        const end = Date.now();\r\n        this.setState({\r\n          description: `success (${end - start} ms)`,\r\n          status: 'success'\r\n        });\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          description: 'failure',\r\n          status: 'failure'\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Panel\r\n        title=\"Main API\"\r\n        description={this.state.description}\r\n        status={this.state.status}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainApiTest;\r\n","import React, { Component } from 'react';\r\nimport Panel from './Panel';\r\n\r\nclass ReportingApiTest extends Component {\r\n  state = {\r\n    description: '',\r\n    status: 'loading'\r\n  };\r\n\r\n  componentDidMount() {\r\n    const start = Date.now();\r\n\r\n    fetch(this.props.endpoint)\r\n      .then(() => {\r\n        const end = Date.now();\r\n        this.setState({\r\n          description: `success (${end - start} ms)`,\r\n          status: 'success'\r\n        });\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          description: 'failure',\r\n          status: 'failure'\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Panel\r\n        title=\"Reporting API\"\r\n        description={this.state.description}\r\n        status={this.state.status}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReportingApiTest;\r\n","import React, { Component } from 'react';\r\nimport Panel from './Panel';\r\n\r\nclass VisitorApiTest extends Component {\r\n  state = {\r\n    description: '',\r\n    status: 'loading'\r\n  };\r\n\r\n  componentDidMount() {\r\n    const start = Date.now();\r\n\r\n    fetch(this.props.endpoint)\r\n      .then(() => {\r\n        const end = Date.now();\r\n        this.setState({\r\n          description: `success (${end - start} ms)`,\r\n          status: 'success'\r\n        });\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          description: 'failure',\r\n          status: 'failure'\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Panel\r\n        title=\"Visitor API\"\r\n        description={this.state.description}\r\n        status={this.state.status}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default VisitorApiTest;\r\n","import React, { Component } from 'react';\r\nimport Panel from './Panel';\r\n\r\nclass CdnTest extends Component {\r\n  state = {\r\n    description: '',\r\n    status: 'loading'\r\n  };\r\n\r\n  componentDidMount() {\r\n    const start = Date.now();\r\n\r\n    fetch(this.props.endpoint)\r\n      .then(() => {\r\n        const end = Date.now();\r\n        this.setState({\r\n          description: `success (${end - start} ms)`,\r\n          status: 'success'\r\n        });\r\n      })\r\n      .catch(() => {\r\n        this.setState({ description: 'failure', status: 'failure' });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Panel\r\n        title=\"CDN\"\r\n        description={this.state.description}\r\n        status={this.state.status}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default CdnTest;\r\n","import React, { Component } from 'react';\r\nimport Panel from './Panel';\r\nimport { hubConnection } from 'signalr-no-jquery';\r\n\r\nclass EngagementHubTest extends Component {\r\n  state = {\r\n    description: '',\r\n    status: 'loading'\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const connection = hubConnection(this.props.endpoint);\r\n    const start = Date.now();\r\n\r\n    try {\r\n      await connection.start();\r\n      const proxy = connection.createHubProxy('EngagementHub');\r\n      const result = await proxy.invoke('test');\r\n\r\n      if (result !== 'success') {\r\n        throw new Error(`received an unexpected result: ${result}`);\r\n      }\r\n\r\n      const end = Date.now();\r\n      this.setState({\r\n        description: `success (${end - start} ms)`,\r\n        status: 'success'\r\n      });\r\n    } catch (err) {\r\n      this.setState({ description: err.toString(), status: 'failure' });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Panel\r\n        title={this.props.title}\r\n        description={this.state.description}\r\n        status={this.state.status}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default EngagementHubTest;\r\n","import React, { Component } from 'react';\r\nimport Panel from './Panel';\r\n\r\nclass UserAgentTest extends Component {\r\n  render() {\r\n    return (\r\n      <Panel\r\n        title=\"User Agent\"\r\n        description={navigator.userAgent}\r\n        status=\"success\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserAgentTest;\r\n","import React, { Component } from 'react';\r\nimport Panel from './Panel';\r\n\r\nclass CookieTest extends Component {\r\n  state = {\r\n    description: '',\r\n    status: 'loading'\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (navigator.cookieEnabled) {\r\n      this.setState({ description: 'enabled', status: 'success' });\r\n    } else {\r\n      this.setState({ description: 'disabled', status: 'failure' });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Panel\r\n        title=\"Cookies\"\r\n        description={navigator.userAgent}\r\n        status=\"success\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default CookieTest;\r\n","import React, { Component } from 'react';\r\nimport Panel from './Panel';\r\n\r\nclass CookieTest extends Component {\r\n  state = {\r\n    description: '',\r\n    status: 'loading'\r\n  };\r\n\r\n  componentDidMount() {\r\n    const start = Date.now();\r\n\r\n    fetch(`images/test.jpg?v=${Date.now()}`)\r\n      .then(response => response.blob())\r\n      .then(blob => {\r\n        const megabits = blob.size / 125000;\r\n        const end = Date.now();\r\n        const milliseconds = end - start;\r\n        const seconds = milliseconds / 1000;\r\n        const mbps = megabits / seconds;\r\n\r\n        this.setState({\r\n          description: `${mbps.toFixed(2)} Mbps`,\r\n          status: 'success'\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Panel\r\n        title=\"Bandwidth\"\r\n        description={this.state.description}\r\n        status={this.state.status}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default CookieTest;\r\n","import React, { Component } from 'react';\r\nimport EngagementApiTest from './components/EngagementApiTest';\r\nimport MainApiTest from './components/MainApiTest';\r\nimport ReportingApiTest from './components/ReportingApiTest';\r\nimport VisitorApiTest from './components/VisitorApiTest';\r\nimport CdnTest from './components/CdnTest';\r\nimport EngagementHubTest from './components/EngagementHubTest';\r\nimport UserAgentTest from './components/UserAgentTest';\r\nimport CookieTest from './components/CookieTest';\r\nimport BandwidthTest from './components/BandwidthTest';\r\n\r\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\r\n\r\nconst Home = () => (\r\n  <div>\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/production\">Production</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/enterprisestaging\">Enterprise Staging</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/corestaging\">Core Staging</Link>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nconst Production = () => (\r\n  <div>\r\n    <UserAgentTest />\r\n    <CookieTest />\r\n    <EngagementApiTest endpoint=\"https://api-engagement-us-east.velaro.com/v1/test/ok\" />\r\n    <MainApiTest endpoint=\"https://api-main-us-east.velaro.com/v1/test/ok\" />\r\n    <ReportingApiTest endpoint=\"https://api-reporting-us-east.velaro.com/v1/test/ok\" />\r\n    <VisitorApiTest endpoint=\"https://api-visitor-us-east.velaro.com/v1/test/ok\" />\r\n    <CdnTest endpoint=\"https://eastprodcdn.azureedge.net/bundles/velaro.inline.js\" />\r\n    <EngagementHubTest\r\n      title=\"Engagement Hub\"\r\n      endpoint=\"https://signalr-engagement-us-east.velaro.com\"\r\n    />\r\n    {/* <EngagementHubTest\r\n      title=\"Engagement Hub 1\"\r\n      endpoint=\"http://signalr-us-prod.eastus.cloudapp.azure.com\"\r\n    />\r\n    <EngagementHubTest\r\n      title=\"Engagement Hub 2\"\r\n      endpoint=\"http://signalr-us-prod-2.eastus.cloudapp.azure.com\"\r\n    />\r\n    <EngagementHubTest\r\n      title=\"Engagement Hub 3\"\r\n      endpoint=\"http://signalrusprd3.eastus.cloudapp.azure.com\"\r\n    />\r\n    <EngagementHubTest\r\n      title=\"Engagement Hub 4\"\r\n      endpoint=\"http://signalrusprd4.eastus.cloudapp.azure.com\"\r\n    /> */}\r\n    <BandwidthTest />\r\n  </div>\r\n);\r\n\r\nconst EnterpriseStaging = () => (\r\n  <div>\r\n    <UserAgentTest />\r\n    <CookieTest />\r\n    <EngagementApiTest endpoint=\"https://api-engagement-ent-stage.velaro.com/v1/test/ok\" />\r\n    <MainApiTest endpoint=\"https://api-main-ent-stage.velaro.com/v1/test/ok\" />\r\n    <ReportingApiTest endpoint=\"https://api-reporting-ent-stage.velaro.com/v1/test/ok\" />\r\n    <VisitorApiTest endpoint=\"https://api-visitor-ent-stage.velaro.com/v1/test/ok\" />\r\n    <CdnTest endpoint=\"https://cdn-ent-stage.velaro.com/bundles/velaro.inline.js\" />\r\n    <EngagementHubTest\r\n      title=\"Engagement Hub\"\r\n      endpoint=\"https://signalr-engagement-ent-stage.velaro.com\"\r\n    />\r\n    <BandwidthTest />\r\n  </div>\r\n);\r\n\r\nconst CoreStaging = () => (\r\n  <div>\r\n    <UserAgentTest />\r\n    <CookieTest />\r\n    <EngagementApiTest endpoint=\"https://api-engagement-staging.velaro.com/v1/test/ok\" />\r\n    <MainApiTest endpoint=\"https://api-main-staging.velaro.com/v1/test/ok\" />\r\n    <ReportingApiTest endpoint=\"https://api-reporting-staging.velaro.com/v1/test/ok\" />\r\n    <VisitorApiTest endpoint=\"https://api-visitor-staging.velaro.com/v1/test/ok\" />\r\n    <CdnTest endpoint=\"https://cdn-staging.velaro.com/bundles/velaro.inline.js\" />\r\n    <EngagementHubTest\r\n      title=\"Engagement Hub\"\r\n      endpoint=\"https://signalr-engagement-staging.velaro.com\"\r\n    />\r\n    <BandwidthTest />\r\n  </div>\r\n);\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <h2>Velaro Network Troubleshooting Tool</h2>\r\n          <Router>\r\n            <div>\r\n              <Route exact path=\"/\" component={Home} />\r\n              <Route path=\"/production\" component={Production} />\r\n              <Route path=\"/enterprisestaging\" component={EnterpriseStaging} />\r\n              <Route path=\"/corestaging\" component={CoreStaging} />\r\n            </div>\r\n          </Router>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}